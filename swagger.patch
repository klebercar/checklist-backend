diff --git a/pom.xml b/pom.xml
index 1111111..2222222 100644
--- a/pom.xml
+++ b/pom.xml
@@ -1,5 +1,6 @@
 <project xmlns="http://maven.apache.org/POM/4.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <!-- ... resto do POM ... -->
 
   <dependencies>
     <!-- suas dependências existentes -->
+    <!-- Swagger / OpenAPI (Spring Boot 3) -->
+    <dependency>
+      <groupId>org.springdoc</groupId>
+      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
+      <version>2.6.0</version>
+    </dependency>
   </dependencies>
 
   <!-- ... resto do POM ... -->
 </project>
diff --git a/src/main/java/com/hotel/checklist/config/OpenApiConfig.java b/src/main/java/com/hotel/checklist/config/OpenApiConfig.java
new file mode 100644
index 0000000..3333333
--- /dev/null
+++ b/src/main/java/com/hotel/checklist/config/OpenApiConfig.java
@@ -0,0 +1,29 @@
+package com.hotel.checklist.config;
+
+import io.swagger.v3.oas.models.OpenAPI;
+import io.swagger.v3.oas.models.info.Info;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+
+@Configuration
+public class OpenApiConfig {
+
+  @Bean
+  public OpenAPI customOpenAPI() {
+    return new OpenAPI()
+        .info(new Info()
+            .title("Checklist API")
+            .version("v1")
+            .description("API do Checklist (Render + Neon)"));
+  }
+}
diff --git a/src/main/java/com/hotel/checklist/config/SecurityConfig.java b/src/main/java/com/hotel/checklist/config/SecurityConfig.java
index aaaaaaa..bbbbbbb 100644
--- a/src/main/java/com/hotel/checklist/config/SecurityConfig.java
+++ b/src/main/java/com/hotel/checklist/config/SecurityConfig.java
@@ -1,6 +1,7 @@
 package com.hotel.checklist.config;
 
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 import org.springframework.security.config.annotation.web.builders.HttpSecurity;
 import org.springframework.security.web.SecurityFilterChain;
@@ -10,12 +11,27 @@
 @Configuration
 public class SecurityConfig {
 
+    /**
+     * Rotas públicas do Swagger (springdoc).
+     */
+    private static final String[] SWAGGER_WHITELIST = {
+            "/v3/api-docs/**",
+            "/swagger-ui.html",
+            "/swagger-ui/**"
+    };
+
     @Bean
     public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
-        http
-            .csrf(csrf -> csrf.disable())
-            .authorizeHttpRequests(auth -> auth
-                .anyRequest().authenticated()
-            );
+        http
+            .csrf(csrf -> csrf.disable())
+            .authorizeHttpRequests(auth -> auth
+                // libera swagger
+                .requestMatchers(SWAGGER_WHITELIST).permitAll()
+                // TODO: se tiver endpoints públicos, adicione aqui com .requestMatchers("/public/**").permitAll()
+                .anyRequest().authenticated()
+            );
         // Se você já tem filtros de JWT, mantenha-os aqui (ex.: addFilterBefore)
         return http.build();
     }
 }
